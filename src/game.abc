import globals;
import puzzles;
import sprites;

void update_counts()
{
    // mark bad tents
    for(u8 y = 8; y > 0; --y)
    {
        u8[13]& row0 = marks[y - 1];
        u8[13]& row1 = marks[y];
        for(i8 x = pw - 1; x >= 0; --x)
        {
            if(row0[x] < MARK_TENT) continue;
            u8 t = MARK_TENT;
            if(row0[x + 1] >= MARK_TENT)
            {
                row0[x + 1] = MARK_BADTENT;
                t = MARK_BADTENT;
            }
            if(row1[x] >= MARK_TENT)
            {
                row1[x] = MARK_BADTENT;
                t = MARK_BADTENT;
            }
            if(row1[x + 1] >= MARK_TENT)
            {
                row1[x + 1] = MARK_BADTENT;
                t = MARK_BADTENT;
            }
            if(x > 0 && row1[x - 1] >= MARK_TENT)
            {
                row1[x - 1] = MARK_BADTENT;
                t = MARK_BADTENT;
            }
            row0[x] = t;
        }
    }

    {
        u8 t = 0;
        for(u8 x = 0; x < pw; ++x)
            t += (marks[ciy][x] >= MARK_TENT);
        chorz[ciy] = t;

        t = 0;
        for(u8 y = 0; y < 8; ++y)
            t += (marks[y][cix] >= MARK_TENT);
        cvert[cix] = t;
    }

    puzzle_solved = true;
    for(u8 x = 0; x < pw; ++x)
    {
        u8 t = 0;
        u8 m = 1;
        for(u8 y = 0; y < ph; ++y)
        {
            if(marks[y][x] >= MARK_TENT)
                t |= m;
            m <<= 1;
        }
        if(t != tents[x])
        {
            puzzle_solved = false;
            break;
        }
    }
}

void frame_game()
{
    bool moved = false;

    for(u8 y = 0; y < ph; ++y)
    {
        u8[13]& row = marks[y];
        for(u8 x = 0; x < pw; ++x)
        {
            u8 f = row[x];
            if(f == MARK_BADTENT && (nf & 15) < 10)
                f = MARK_TENT;
            $draw_sprite(x * 7 + ox, y * 7 + oy, SPRITES, f);
        }
    }
    $draw_rect(ox, oy, pw * 7 + 1, ph * 7 + 1, DARK_GRAY);
    
    for(u8 i = 0; i < pw; ++i)
    {
        u8 f = nvert[i];
        if(f == cvert[i]) f += 10;
        $draw_sprite(i * 7 + 2 + ox, ph * 7 + 2 + oy, NUMBERS, f);
    }
    for(u8 i = 0; i < ph; ++i)
    {
        u8 f = nhorz[i];
        if(f == chorz[i]) f += 10;
        $draw_sprite(pw * 7 + 2 + ox, i * 7 + 1 + oy, NUMBERS, f);
    }
    
    if($just_pressed(UP_BUTTON))
    {
        if(ciy-- == 0) ciy = ph - 1;
        moved = true;
    }
    if($just_pressed(DOWN_BUTTON))
    {
        if(++ciy == ph) ciy = 0;
        moved = true;
    }
    if($just_pressed(LEFT_BUTTON))
    {
        if(cix-- == 0) cix = pw - 1;
        moved = true;
    }
    if($just_pressed(RIGHT_BUTTON))
    {
        if(++cix == pw) cix = 0;
        moved = true;
    }
    
    {
        u8 tcy = ciy * 7;
        if(cy != tcy)
        {
            if(cy < tcy)
                cy += (tcy - cy + 1) / 2;
            if(cy > tcy)
                cy -= (cy - tcy + 1) / 2;
        }
    }
    {
        u8 tcx = cix * 7;
        if(cx != tcx)
        {
            if(cx < tcx)
                cx += (tcx - cx + 1) / 2;
            if(cx > tcx)
                cx -= (cx - tcx + 1) / 2;
        }
    }
    
    $draw_sprite(cx + ox, cy + oy, CURSOR, cf);
    if(++cf >= 7) cf = 0;

    if($just_pressed(A_BUTTON))
    {
        u8& r = marks[ciy][cix];
        u8 t = r;
        if(t >= MARK_TENT) t = MARK_NONE;
        else if(t != MARK_TREE) t = MARK_TENT;
        r = t;
        update_counts();
    }

    if($just_pressed(B_BUTTON))
    {
        u8& r = marks[ciy][cix];
        u8 t = r;
        holding_down_b = true;
        holding_down_b_mark = MARK_NOTENT;
        if(t == MARK_NOTENT) holding_down_b_mark = t = MARK_NONE;
        else if(t != MARK_TREE) t = MARK_NOTENT;
        r = t;
        update_counts();
        if(u32($millis() - pressed_b_time) < 350)
        {
            pause_choice = 0;
            state = STATE_PAUSE;
        }
        pressed_b_time = $millis();
    }
    else if(holding_down_b && moved)
    {
        u8& r = marks[ciy][cix];
        u8 t = r;
        if(t == MARK_NONE || t == MARK_NOTENT)
            t = holding_down_b_mark;
        r = t;
        update_counts();
    }

    if(!$pressed(B_BUTTON))
        holding_down_b = false;

    if(moved)
        pressed_b_time = 0;

    if(puzzle_solved)
    {
        state = STATE_SOLVED;
        nf = 0;
    }
}
