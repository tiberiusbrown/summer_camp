import globals;

struct puzzle_t
{
    u8[12] tents;
    u8[12] trees;
};

void load_puzzle(puzzle_t prog& p)
{
    nhorz = {};
    nvert = {};
    chorz = {};
    cvert = {};
    marks = {};
    for(u8 x = 0; x < PUZZLE_W; ++x)
    {
        u8 tent = p.tents[x];
        u8 tree = p.trees[x];
        for(u8 m = 1, y = 0; m != 0; m <<= 1)
        {
            if(tent & m)
                marks[y][x] = MARK_TREE;
            if(tree & m)
            {
                nhorz[y] += 1;
                nvert[x] += 1;
            }
            ++y;
        }
    }
}

void load_next_puzzle()
{
    if(is_easy)
    {
        load_puzzle(PUZZLES_EASY[puzzle_index_easy]);
        puzzle_index_easy += 1;
        if(puzzle_index_easy >= len(PUZZLES_EASY))
            puzzle_index_easy = 0;
    }
    else
    {
        load_puzzle(PUZZLES_HARD[puzzle_index_hard]);
        puzzle_index_hard += 1;
        if(puzzle_index_hard >= len(PUZZLES_HARD))
            puzzle_index_hard = 0;
    }
}
